/* utility functions working with 1D vectors of xyz f32 values using ndarray::arr1<f32>
 */
extern crate ndarray;

use ndarray as nd;

/// invert a 4x4 matrix
fn inv_matrix(m: &nd::Array2<f32>) -> nd::Array2<f32> { 
    let a2323 = m[[2,2]] * m[[3,3]] - m[[2,3]] * m[[3,2]];
    let a1323 = m[[2, 1]] * m[[3, 3]] - m[[2, 3]] * m[[3, 1]];
    let a1223 = m[[2, 1]] * m[[3, 2]] - m[[2, 2]] * m[[3, 1]];
    let a0323 = m[[2, 0]] * m[[3, 3]] - m[[2, 3]] * m[[3, 0]];
    let a0223 = m[[2, 0]] * m[[3, 2]] - m[[2, 2]] * m[[3, 0]];
    let a0123 = m[[2, 0]] * m[[3, 1]] - m[[2, 1]] * m[[3, 0]];
    let a2313 = m[[1, 2]] * m[[3, 3]] - m[[1, 3]] * m[[3, 2]];
    let a1313 = m[[1, 1]] * m[[3, 3]] - m[[1, 3]] * m[[3, 1]];
    let a1213 = m[[1, 1]] * m[[3, 2]] - m[[1, 2]] * m[[3, 1]];
    let a2312 = m[[1, 2]] * m[[2, 3]] - m[[1, 3]] * m[[2, 2]];
    let a1312 = m[[1, 1]] * m[[2, 3]] - m[[1, 3]] * m[[2, 1]];
    let a1212 = m[[1, 1]] * m[[2, 2]] - m[[1, 2]] * m[[2, 1]];
    let a0313 = m[[1, 0]] * m[[3, 3]] - m[[1, 3]] * m[[3, 0]];
    let a0213 = m[[1, 0]] * m[[3, 2]] - m[[1, 2]] * m[[3, 0]];
    let a0312 = m[[1, 0]] * m[[2, 3]] - m[[1, 3]] * m[[2, 0]];
    let a0212 = m[[1, 0]] * m[[2, 2]] - m[[1, 2]] * m[[2, 0]];
    let a0113 = m[[1, 0]] * m[[3, 1]] - m[[1, 1]] * m[[3, 0]];
    let a0112 = m[[1, 0]] * m[[2, 1]] - m[[1, 1]] * m[[2, 0]];

    let det = 1.0f32 / 
         (m[[0, 0]] * (m[[1, 1]] * a2323 - m[[1, 2]] * a1323 + m[[1, 3]] * a1223) 
        - m[[0, 1]] * (m[[1, 0]] * a2323 - m[[1, 2]] * a0323 + m[[1, 3]] * a0223) 
        + m[[0, 2]] * (m[[1, 0]] * a1323 - m[[1, 1]] * a0323 + m[[1, 3]] * a0123) 
        - m[[0, 3]] * (m[[1, 0]] * a1223 - m[[1, 1]] * a0223 + m[[1, 2]] * a0123));

    nd::arr2(&[
        [det *   (m[[1, 1]] * a2323 - m[[1, 2]] * a1323 + m[[1, 3]] * a1223),
         det * - (m[[0, 1]] * a2323 - m[[0, 2]] * a1323 + m[[0, 3]] * a1223),
         det *   (m[[0, 1]] * a2313 - m[[0, 2]] * a1313 + m[[0, 3]] * a1213),
         det * - (m[[0, 1]] * a2312 - m[[0, 2]] * a1312 + m[[0, 3]] * a1212)],
        [det * - (m[[1, 0]] * a2323 - m[[1, 2]] * a0323 + m[[1, 3]] * a0223),
         det *   (m[[0, 0]] * a2323 - m[[0, 2]] * a0323 + m[[0, 3]] * a0223),
         det * - (m[[0, 0]] * a2313 - m[[0, 2]] * a0313 + m[[0, 3]] * a0213),
         det *   (m[[0, 0]] * a2312 - m[[0, 2]] * a0312 + m[[0, 3]] * a0212)],
        [det *   (m[[1, 0]] * a1323 - m[[1, 1]] * a0323 + m[[1, 3]] * a0123),
         det * - (m[[0, 0]] * a1323 - m[[0, 1]] * a0323 + m[[0, 3]] * a0123),
         det *   (m[[0, 0]] * a1313 - m[[0, 1]] * a0313 + m[[0, 3]] * a0113),
         det * - (m[[0, 0]] * a1312 - m[[0, 1]] * a0312 + m[[0, 3]] * a0112)],
        [det * - (m[[1, 0]] * a1223 - m[[1, 1]] * a0223 + m[[1, 2]] * a0123),
         det *   (m[[0, 0]] * a1223 - m[[0, 1]] * a0223 + m[[0, 2]] * a0123),
         det * - (m[[0, 0]] * a1213 - m[[0, 1]] * a0213 + m[[0, 2]] * a0113),
         det *   (m[[0, 0]] * a1212 - m[[0, 1]] * a0212 + m[[0, 2]] * a0112)]])
}